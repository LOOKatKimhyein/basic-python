#!/usr/bin/env python

# coding: utf-8

 

# ### 02-2

 

# In[1]:

 

 

a = 'pithon'

a[1]

 

 

# In[5]:

 

 

a[:1] + 'y'+a[2:]

 

 

# #### formatting

 

# #### %이용

 

# - %s  : string

# - %c : character(문자 1개)

# - %d : 정수(integer)

# - %f : 부동소수(floating-point)

# - %o : 8진수

# - %x : 16진수

# - %% : literal %(%자체)

 

# In[6]:

 

 

'I eat %f apples'%9

 

 

# In[7]:

 

 

'i eat %d apples'%5

 

 

# In[8]:

 

 

'I will go to the %s and eat %d apples'%('hospital',9)

 

 

# In[13]:

 

 

'percent %d%%'%98

 

 

# In[16]:

 

 

'%10s name'%'eden'

#오른쪽정렬

 

 

# In[17]:

 

 

'%-10s name'%'eden'

# 왼쪽 정렬

 

 

# In[21]:

 

 

'%0.5f'%1234.587643

# 소숫점 자리

 

 

# In[20]:

 

 

'%-30.5f'%1234.587643

 

 

# #### format함수이용

 

# In[24]:

 

 

'i eat {}'.format('name')

 

 

# In[26]:

 

 

'i eat {}{}'.format('name',5)

 

 

# In[33]:

 

 

# 오른쪽정렬

'i eat {:>30}'.format('christmas')

 

 

# In[32]:

 

 

# 왼쪽정렬

'i eat {:<30}'.format('shake')

 

 

# In[34]:

 

 

# 가운데정렬

'i eat {:^30}'.format('shake')

 

 

# In[36]:

 

 

# 공백채우기

"{:*^10}".format('eden')

 

 

# In[39]:

 

 

'I said again, my name is {:!<20}'.format('eden')

 

 

# #### 문자열 관련 함수

 

# In[41]:

 

 

a= 'hobby'

a.count('b')

 

 

# In[44]:

 

 

# 위치 index알려주기

a.find('l')

# 존재하지 않는다면 -1을 보인다

 

 

# In[45]:

 

 

a.find('o')

 

 

# In[47]:

 

 

a.index('o')

 

 

# In[48]:

 

 

# 문자열 삽입

'*'.join('dgsd')

 

 

# In[50]:

 

 

a.upper()

 

 

# In[51]:

 

 

a.lower()

 

 

# In[54]:

 

 

#공백지우기

a =' {:<10}'.format('name')

 

 

# In[55]:

 

 

a

 

 

# In[56]:

 

 

a.lstrip()

 

 

# In[57]:

 

 

a.rstrip()

 

 

# In[59]:

 

 

a=  'today is friday'

 

 

# In[61]:

 

 

a.split(',')

 

 

# In[ ]:

 

 

 

 

 

# In[ ]:

 

 

 

 

 

# In[66]:

 

 

a = []

 

 

# In[67]:

 

 

a += ['name']

 

 

# In[68]:

 

 

a

 

 

# In[69]:

 

 

a += ['apple']

 

 

# In[70]:

 

 

a

 

 

# In[71]:

 

 

a.append(4)

print(a)

 

 

# In[72]:

 

 

a.append([5,4])

 

 

# In[75]:

 

 

a.insert(0,'my')

 

 

# In[76]:

 

 

a

 

 

# In[79]:

 

 

# extend(x)에서 x는 리스트만 가능

a.extend([4])

 

 

# In[80]:

 

 

a

 

 

# ### 02-4 튜플

 

# In[81]:

 

 

# 튜플은 값이 변하지 앉는다.

 

 

# In[85]:

 

 

t1 = (3,6,'rks')

 

 

# In[87]:

 

 

# 튜플은 삭제불가능하다

del t1[0]

 

 

# In[88]:

 

 

t1*3

 

 

# #### 05-5 딕셔너리

 

# In[99]:

 

 

# key는 중복될 수없으며, list는 불가능하지만, 튜플은 key가 될수있다

 

 

# In[91]:

 

 

a = {'name' : 'eden'}

 

 

# In[92]:

 

 

a

 

 

# In[94]:

 

 

# dictionary 쌍 추가

a['age'] = 24

a

 

 

# In[95]:

 

 

a['age']

 

 

# In[100]:

 

 

a.keys()

 

 

# In[103]:

 

 

a.values()

 

 

# In[107]:

 

 

for key, val in a.items():

    print(key, " ",val)

 

 

# In[109]:

 

 

a.items()

 

 

# In[110]:

 

 

a

 

 

# In[114]:

 

 

# key : value 쌍 모두 지우기

a.clear()

 

 

# In[113]:

 

 

a

 

 

# In[111]:

 

 

a.clear()

 

 

# In[115]:

 

 

'name' in a

 

 

# ### 02-6 집합

 

# - 중복을 허용하지 않는다.

# - 순서가 없다(Unordered)

 

# In[119]:

 

 

nat1= ['eden','An','eden']

nat2= ['eden','An','eden','An','Jae']

 

 

# In[122]:

 

 

nat1 = set(nat1)

nat2 = set(nat2)

 

 

# In[123]:

 

 

nat1

 

 

# In[124]:

 

 

nat2

 

 

# In[127]:

 

 

#합집합

nat2|nat1

 

 

# In[126]:

 

 

#차집합

nat2 - nat1

 

 

# In[128]:

 

 

#값 추가하기

nat1.update(['numer','fall'])

 

 

# In[129]:

 

 

nat1

 

 

# In[130]:

 

 

# 특정값 제거하기

nat1.remove('numer')

 

 

# In[131]:

 

 

nat1

 

 

# #### 02-7 bool

 

# - 참, 거짓을 나타내는 자료형

# - True, False의 값만 가질 수 있다

 

# In[132]:

 

 

a=True

type(a)

 

 

# In[133]:

 

 

b= False

 

 

# In[135]:

 

 

a>b

 

 

# In[136]:

 

 

a == b

 

 

# In[137]:

 

 

a<b
